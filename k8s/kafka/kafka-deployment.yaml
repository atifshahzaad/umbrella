apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  serviceName: "kafka-broker"    
  template:
    metadata:
      labels:
        app: kafka  
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.3.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
        ports:
        - containerPort: 9092
        # lifecycle:
        #   postStart:
        #     exec:
        #       command: ["/bin/sh", "-c", "export KAFKA_BROKER_ID=${HOSTNAME##*-}"]
        env:
        # - name: KAFKA_BROKER_ID
        #   valueFrom:
        #     fieldRef:
        #       fieldPath: metadata.pod-template-hash
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_LISTENERS
          value: OUTSIDE://0.0.0.0:9092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: OUTSIDE:PLAINTEXT
        - name: KAFKA_ADVERTISED_LISTENERS
          value: OUTSIDE://$(POD_NAME).kafka-broker.default.svc.cluster.local:9092
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: OUTSIDE
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
  selector:
    app: kafka

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-np
  labels:
    app: kafka
spec:
  type: NodePort
  ports:
  - port: 9092
    nodePort: 30031
    targetPort: 9092
    name: kafka
  selector:
    app: kafka
